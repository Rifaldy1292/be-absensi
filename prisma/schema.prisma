// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" // ganti kalau kamu pakai MySQL
  url      = env("DATABASE_URL")
}


model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  role       String   // e.g. 'admin', 'hr'
  createdAt DateTime @default(now())
}

model Employee {
  id         String     @id @default(uuid())
  rfid_code  String     @unique
  nik        String     @unique
  name       String
  position   String
  department String
  createdAt DateTime   @default(now())

  attendances Attendance[]
  scan_logs   ScanLog[]
}

model Attendance {
  id           String     @id @default(uuid())
  employee_id  String
  date         DateTime   // Only date will be used
  time_in      DateTime?
  time_out     DateTime?
  total_hours  String?
  createdAt DateTime   @default(now())

  employee     Employee   @relation(fields: [employee_id], references: [id])
  scan_logs    ScanLog[]
}

model ScanLog {
  id            String     @id @default(uuid())
  employee_id   String
  attendance_id String?    // Nullable
  timestamp     DateTime
  scan_type     String     // 'in' or 'out', gunakan enum kalau mau lebih rapih
  source        String     // Device/location info

  employee      Employee   @relation(fields: [employee_id], references: [id])
  attendance    Attendance? @relation(fields: [attendance_id], references: [id])
}
